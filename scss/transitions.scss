/* Transitions */
@mixin animation($animations) {
	-webkit-animation: $animations;
            animation: $animations;
}

$time: 0.8s;

/* Invalid/instant transition */
.transition-in {
	@include animation(appear 0ms step-start);
}
.transition-out {
	@include animation(appear 0ms step-end);
}

/* Dissolve */
[data-t8n^=dissolve] {
	&.transition-in {
		@include animation(appear $time);
	}
	&.transition-out {
		@include animation(appear $time reverse);
	}
}

/* Shudder */
[data-t8n^=shudder] {
	&.transition-in {
		display: inline-block;
		@include animation(shudder-in $time);
	}
	&.transition-out {
		display: inline-block;
		@include animation(shudder-in $time reverse);
	}
}

/* Rumble */
[data-t8n^=rumble] {
	&.transition-in {
		display: inline-block;
		@include animation(rumble-in $time);
	}
	&.transition-out {
		display: inline-block;
		@include animation(rumble-in $time reverse);
	}
}

/* Box-flash */
[data-t8n^=boxflash] {
	&.transition-in {
		@include animation(box-flash $time);
	}
}

/* Pulse */
[data-t8n^=pulse] {
	&.transition-in {
		@include animation(pulse $time);
		display:inline-block;
	}
	&.transition-out {
		@include animation(pulse $time reverse);
		display:inline-block;
	}
}

/* Slide */
/*
	These can't have the hyphen in their data-t8n name because Utils.insensitiveName() removes it.
	Also, the transition-outs use the reverse direction of the transition-ins to preserve the semantic
	meaning of the names.
*/
[data-t8n^=slideleft] {
	&.transition-in {
		@include animation(slide-left $time);
		display:inline-block;
	}
	&.transition-out {
		@include animation(slide-right $time reverse);
		display:inline-block;
	}
}
[data-t8n^=slideright] {
	&.transition-in {
		@include animation(slide-right $time);
		display:inline-block;
	}
	&.transition-out {
		@include animation(slide-left $time reverse);
		display:inline-block;
	}
}
[data-t8n^=slideup] {
	&.transition-in {
		@include animation(slide-up $time);
		display:inline-block;
	}
	&.transition-out {
		@include animation(slide-down $time reverse);
		display:inline-block;
	}
}
[data-t8n^=slidedown] {
	&.transition-in {
		@include animation(slide-down $time);
		display:inline-block;
	}
	&.transition-out {
		@include animation(slide-up $time reverse);
		display:inline-block;
	}
}

/* Flicker */
[data-t8n^=flicker] {
	&.transition-in {
		@include animation(flicker $time);
	}
	&.transition-out {
		@include animation(flicker $time reverse);
	}
}

/* Modifiers */
[data-t8n$=fast] {
	animation-duration: $time/2;
	-webkit-animation-duration: $time/2;
}

/* Modifiers */
[data-t8n$=slow] {
	animation-duration: $time*2;
	-webkit-animation-duration: $time*2;
}
